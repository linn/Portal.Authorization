// <auto-generated />
using System;
using Linn.Portal.Authorization.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Linn.Portal.Authorization.Persistence.Migrations
{
    [DbContext(typeof(ServiceDbContext))]
    [Migration("20250909142752_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Linn.Portal.Authorization.Domain.Association", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AssociatedResource")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("SubjectSub")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SubjectSub");

                    b.ToTable("Associations");
                });

            modelBuilder.Entity("Linn.Portal.Authorization.Domain.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssociationId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("PrivilegeId")
                        .HasColumnType("integer");

                    b.Property<Guid?>("SubjectSub")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AssociationId");

                    b.HasIndex("PrivilegeId");

                    b.HasIndex("SubjectSub");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Linn.Portal.Authorization.Domain.Privilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ScopeType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Privileges");
                });

            modelBuilder.Entity("Linn.Portal.Authorization.Domain.Subject", b =>
                {
                    b.Property<Guid>("Sub")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Sub");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Linn.Portal.Authorization.Domain.Association", b =>
                {
                    b.HasOne("Linn.Portal.Authorization.Domain.Subject", "Subject")
                        .WithMany("Associations")
                        .HasForeignKey("SubjectSub");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Linn.Portal.Authorization.Domain.Permission", b =>
                {
                    b.HasOne("Linn.Portal.Authorization.Domain.Association", "Association")
                        .WithMany()
                        .HasForeignKey("AssociationId");

                    b.HasOne("Linn.Portal.Authorization.Domain.Privilege", "Privilege")
                        .WithMany()
                        .HasForeignKey("PrivilegeId");

                    b.HasOne("Linn.Portal.Authorization.Domain.Subject", "Subject")
                        .WithMany("Permissions")
                        .HasForeignKey("SubjectSub");

                    b.Navigation("Association");

                    b.Navigation("Privilege");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Linn.Portal.Authorization.Domain.Subject", b =>
                {
                    b.Navigation("Associations");

                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
